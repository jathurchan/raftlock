name: Unit Tests
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  call-reusable-setup:
    uses: ./.github/workflows/setup.yml

  test:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    needs: call-reusable-setup
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: workspace-${{ github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Run tests and generate coverage
        run: |
          go test -v -timeout=5m ./... -coverprofile=coverage.tmp.out -covermode=atomic
          grep -vE '\.pb\.go:|/testutil/|/examples/' coverage.tmp.out > coverage.out
      - name: ‚úÖ Show test results and coverage %
        run: |
          echo "### ‚úÖ Test Results:"
          grep -E '^(=== RUN|--- (PASS|FAIL))' test-output.txt \
            | sed -E 's/=== RUN +/Running: /; s/--- PASS: /‚úÖ Passed: /; s/--- FAIL: /‚ùå Failed: /' \
            || echo "No test results found in output."

          echo ""
          echo "### üìä Total Coverage:"
          go tool cover -func=coverage.out | grep total \
            || echo "Coverage data not found or 'total' line missing."

      - name: Generate coverage report
        if: success() || failure()
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report as artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          fail_ci_if_error: true
          verbose: true